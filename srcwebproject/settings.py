"""
Django settings for srcwebproject project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from pathlib import Path
import environ

# Base directory of the project
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# TEMPLATE_DIR explicitly defines where template files are stored
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')


# Initialise Django-environ to manage sensitive data using environment variables
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env(DEBUG=(bool, False))  # Create environ instance with default debug off
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))    # Reads the .env file into environment variables

# Load the secret key and allowed hosts from environment variables
SECRET_KEY = env('SECRET_KEY')
DEBUG = env('DEBUG', default=True)
# ALLOWED_HOSTS restricts domains/IP addresses that can serve this Django application
ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=["itechproject.onrender.com", "localhost", "127.0.0.1"])



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'srcweb',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'srcwebproject.urls'


# URL to access static files
STATIC_URL = '/static/'
# Additional static file directories for Django to search when looking for static assets
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


# Directory where Django collects all static files into a single location during production deployment
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR, ],   # Explicit path to template directories
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'srcwebproject.wsgi.application'


# DATABASE configuration, specifying how Django connects to the project's database
# Here using SQLite as default
DATABASES = {
    'default': {
        'ENGINE': env('DB_ENGINE', default='django.db.backends.sqlite3'),
        'NAME': env('DB_NAME', default=os.path.join(BASE_DIR, 'db.sqlite3')),
    }
}



AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True



# Default type of auto generated primary keys for Django models
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuration for sending emails using ProtonMail Bridge
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'   # SMTP backend
EMAIL_HOST = env('EMAIL_HOST')            # SMTP server address
EMAIL_PORT = env.int('EMAIL_PORT', default=1025)  # SMTP port provided by ProtonMail Bridge
EMAIL_USE_TLS = env.bool('EMAIL_USE_TLS', default=True) # Enable Transport Layer Security (TLS)
EMAIL_HOST_USER = env('EMAIL_HOST_USER')  # Email account username
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')    # SMTP email password from ProtonMail Bridge
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL', default='src-no-reply@protonmail.com')   # Default sender email address


# Redirect HTTP to HTTPS (True in production, False in local development)
SECURE_SSL_REDIRECT = env.bool('SECURE_SSL_REDIRECT', default=False)
# Ensures cookies are sent over HTTPS connections only
SESSION_COOKIE_SECURE = True
# Protects CSRF cookie transmission by enforcing HTTPS
CSRF_COOKIE_SECURE = True